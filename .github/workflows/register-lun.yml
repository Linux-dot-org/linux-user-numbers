name: "Process New LUN PRs"

on:
  pull_request:
    types: [opened]

jobs:
  validate_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Next LUN Number
        id: next_lun
        run: |
          LAST_LUN=$(jq -r '.last_lun' registry.json)
          NEXT_LUN=$((LAST_LUN + 1))
          echo "NEXT_LUN=$NEXT_LUN" >> $GITHUB_ENV
          echo "Determined NEXT_LUN: $NEXT_LUN"

      - name: Validate JSON Structure
        run: |
          JSON_FILE=$(ls pending_registrations/*.json | head -n 1)
          if [[ ! -f "$JSON_FILE" ]]; then
            echo "Error: No pending LUN registration file found."
            exit 1
          fi
          jq empty "$JSON_FILE" || { echo "Invalid JSON format"; exit 1; }

      - name: Upload to IPFS (Using Pinata)
        id: ipfs
        run: |
          JSON_FILE=$(ls pending_registrations/*.json | head -n 1)
          RESPONSE=$(curl -s -X POST "https://api.pinata.cloud/pinning/pinFileToIPFS" \
          -H "pinata_api_key: ${{ secrets.PINATA_API_KEY }}" \
          -H "pinata_secret_api_key: ${{ secrets.PINATA_SECRET_KEY }}" \
          -F "file=@$JSON_FILE")
          
          CID=$(echo "$RESPONSE" | jq -r '.IpfsHash')
          if [[ -z "$CID" || "$CID" == "null" ]]; then
            echo "Error: Failed to upload to IPFS. Response: $RESPONSE"
            exit 1
          fi
          
          echo "CID=$CID" >> $GITHUB_ENV
          echo "Uploaded to IPFS: $CID"

      - name: Update Registry JSON
        run: |
          jq --arg NEXT_LUN "$NEXT_LUN" --arg CID "$CID" \
            'if .registrations | type == "array" 
             then .registrations = {} 
             else . end 
             | .last_lun = ($NEXT_LUN | tonumber) 
             | .registrations[$NEXT_LUN] = $CID' registry.json > registry_tmp.json

          mv registry_tmp.json registry.json
          rm -f pending_registrations/*.json

      - name: Stage & Commit Changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add registry.json
          git commit -m "Registered LUN #$NEXT_LUN" || echo "No changes to commit"

      - name: Push Changes
        run: |
          git pull --rebase
          git push

      - name: Auto-Merge PR
        uses: pascalgn/automerge-action@v0.15.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          merge_method: "squash"
          delete_branch: true
